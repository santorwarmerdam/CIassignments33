function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 11-Sep-2014 16:23:35.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 10xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 7xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-0.59015;-0.6862;-0.65305;-0.75986;-0.74038;-0.77253;-0.75764;-0.87969;-0.70479;-0.66557];
  x1_step1_gain = [0.878329417448014;0.844987113946512;0.819285992257747;0.81992079565114;0.835882775799522;0.811843168136779;0.827253023609801;0.74258620497607;0.812219022981737;0.870447018066128];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-3.747243863786486;4.3756737672962265;4.0972949755192847;2.7195708871618041;-2.0401394443572305;4.2495855879487463;2.7526729359435937;3.4574583969941917;5.150437709257103;-3.3000015041187623];
  IW1_1 = [-5.0091515374417446 -1.1426208428443665 2.3602522400220858 2.5628179510511773 -1.7531855424686182 -3.6536757935542834 -2.8678180044454376 0.15511595258337391 -2.2691437464383295 4.1372643917935346;-0.27333810995189556 -1.7914376559565894 1.9710522707286029 -2.7863545743446512 -3.0695631380120356 -1.8640707044886702 -2.4211890833903045 -0.51496784454773625 2.0736281397243195 1.9322142817331289;-1.7165456558258221 5.7571776714425482 1.3403474243143161 0.1468810641755639 -0.91431121219905742 -4.4292427678555475 4.2051751436380087 0.12595536000187299 -3.2009941303780418 -1.6676619394879841;-2.4364449192538808 2.9954529358353819 -1.3155158744950586 4.0837715779775721 0.48529828216252435 4.0026386361410227 -2.8254118067825997 0.13678933921099423 -0.36242242730958751 -1.0429565737965629;0.19431123967811031 2.6816266770900432 -0.20642825603605869 0.26572978798538294 0.43838802940589777 3.4103182967923567 0.87604261334726929 7.308079730720058 -3.9646660270146636 -4.1604926770566131;2.8576968377024041 -9.5218127277102358 4.7627277925977625 8.1270567494035202 5.1479131593284437 -4.9846944365293462 -1.5353846743099977 1.6598725057906143 -5.079776102621798 6.0389133359513183;0.1237698901114966 -0.95639074367293953 1.8129471247359989 -3.4425459437400456 -3.3381367493523415 0.88904367373033366 -2.9463673444913967 3.8452453547813619 0.68873833853904276 0.65301396958431535;-0.19156815515762968 -4.8058764704892907 -0.70229670450858961 1.5326566408702023 3.7522987206044256 -1.106024450327165 2.3423106687989721 5.0127261778633647 -2.805899399792942 1.0916715851166452;3.3295238854869016 -2.9028349775240527 3.7291060326794421 3.9855046418810591 -1.3796298437226828 -2.6890546981889778 -4.6781451367206239 -5.2832082572756383 0.23713632490048026 4.514944463910421;3.2748780673618896 1.5348695053311745 2.3342361447291475 3.3790997024268128 0.038047887093325058 2.2273280903352966 -2.1300371385511845 3.6541893524449711 -4.2326020474979362 -1.7539711562529081];
  
  % Layer 2
  b2 = [-0.69804800441627735;-0.32224252180184992;-0.71328908032862415;-0.46519195495762755;-0.79036930076916712;-0.87333695987247617;-1.1375221778539777];
  LW2_1 = [-0.11777425410313257 -0.086626705913688942 0.15698676792559027 0.13307703675653842 -0.099791831951211787 -0.21090657406898439 0.1466624753196081 -0.68097442030679378 0.24943180352136701 -0.036819529626757205;0.91528393050127532 -0.056421146863381733 0.093216634365632753 0.081480601708647502 -0.068624889550607804 0.021824905280603567 0.11048884335576843 0.057063522609925248 -0.002749734974193271 -0.041461456679965265;-0.18195779191361691 -0.051442900979688885 -0.8238591394370347 0.20119793658465807 -0.11186375175329862 0.062785218007018292 0.17923747486310584 0.14404126589688601 0.0079237051824131086 -0.077362587615532108;-0.01874673779201539 0.029126493696709541 0.024814242252644503 0.043499364868097239 0.15757061482024443 -0.10361212349139166 0.044024562708409286 0.1501097203643674 -0.71417564855586946 -0.20033859466372256;-0.20461403686097185 -0.13294068804612974 0.22966778315391112 -0.8055916969594199 -0.13416158592270649 0.056963633303688893 0.26723398583455221 0.14756179009452308 0.046727901924544575 -0.074343475829673017;-0.1917122453139721 0.18365242688986638 0.15959530553458376 0.20514117754991887 -0.097758589049806957 0.048628557404561429 -0.89099643778058946 0.13137649724910572 0.034706787866687801 -0.072458895839492471;-0.20047886451756677 0.11465252121631235 0.15957840620467251 0.14119557949156011 0.3546300334073868 0.12431638356450413 0.14334909569914603 0.050821624091986324 0.37813518503504984 0.50278454025514263];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [2;2;2;2;2;2;2];
  y1_step1_xoffset = [0;0;0;0;0;0;0];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
